
Тестовое задание на вакансию от ООО АртЭКС:

---------------------------------------------------------------------------------------------
Применемые инструменты:
    libev   4.32
    libpcap 1.10.0  (в третьем задании)

---------------------------------------------------------------------------------------------

1) Реализовать на Си программу, использующую event loop (можно взять
    любую библиотеку, желательно libev).
    На вход программе передают 1 аргумент - номер порта.
    На данном порте открыть слушающий TCP сокет, и на все входящие пакеты
    отсылать их обратно в неизменном виде.
    Тестировать функционал можно с помощью telnet.

    Сборка: gcc  -o test_1 -lev  test_1.c
    Запуск:
        ./test_1        8003
        telnet  127.0.1 8003


2) В программу добавить 1 поток (всего будет 2 потока включая 1 главный поток).
    В потоке должен быть свой event loop.
    Перенести TCP сокет в этот поток.
    Приняв пакет, нужно переслать его на обработку в главный поток.
    Главный поток должен что-то сделать с пакетом, например перевернуть все данные в нем задом наперед.
    После этого пакет передается обратно в поток и там отсылается обратно клиенту.

    каталог "test_2"
    Сборка: gcc  -o test_2  -lev    test_2.c   test_2.Thread.c
            или make
    sketch_2.odp -пояснение взаимодействия модулей
    Запуск:
        ./test_2        8003
        telnet  127.0.1 8003


3) Вместо порта на вход передаются имена входящего и выходящего сетевых
    интерфейсов (например eth0, eth1).
    В потоке нужно ловить все входящие UDP пакеты на входящем интерфейсе (в
    сыром виде, с L2 заголовками).
    Далее пакет также передается в основной поток, UDP payload
    переворачивается задом наперед, и пакет передается обратно в поток на
    отправку.
    Отправка осуществляется тоже в сыром виде в выходящий интерфейс, с
    формированием L2 заголовков, подсчетом сумм итд.
    --------------------------------------------
    Пункт 3 - это программа максимум, если сложно, можно просто словами
    расписать технические детали как бы ты это реализовал

    каталог "test_3"
    Сборка:
            задать в test_3.Processing.c
                #define MAC_DEST   MAC_SRC    DEST_IP    SRC_IP
                        2-й комп   1-й комп   2-й комп   1-й комп
                        ????????   ????????   10.1.2.3   10.1.2.4
            далее
            gcc  -o test_3  -lev -lpcap    test_3.c   test_3.Thread.c   test_3.Processing.c
            или make

    sketch_3.odp         -пояснение взаимодействия модулей
    sketch_3.Test.odp    -пояснение к тестовому прогону

    Запуск:
            eth0  10.1.2.4                          eth0  10.1.2.3
        -------------------------               ------------------------
        sudo ./test_3   lo   eth0               test_3.Processing.c   #define MAC_DEST  MAC_SRC  DEST_IP  SRC_IP
        test/client     127.0.0.1  8003
        test/server     8003                    test/server     8003

5 bytes  127.0.0.1 port 50088 ==> 12345         5 bytes  10.1.2.4 port 50088 ==> 54321
6 bytes  127.0.0.1 port 50088 ==> qwerty        6 bytes  10.1.2.4 port 50088 ==> ytrewq
6 bytes  127.0.0.1 port 50088 ==> QWERTY        6 bytes  10.1.2.4 port 50088 ==> YTREWQ 
7 bytes  127.0.0.1 port 50088 ==> ABCDEFG       7 bytes  10.1.2.4 port 50088 ==> GFEDCBA
